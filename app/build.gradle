apply plugin: 'apk-conventions'

def isPro = new File(projectDir, "build-pro.gradle").isFile()

if (isPro) {
    apply from: "build-pro.gradle"
}

android {
    namespace "com.mirfatif.mylocation"

    defaultConfig {
        applicationId namespace
        versionCode 106
        versionName "v1.06"
    }

    flavorDimensions.addAll('type', 'version')
    productFlavors {
        self {
            dimension 'type'
        }
        ps {
            dimension 'type'
            applicationIdSuffix '.ps'
            versionNameSuffix '-ps'
        }
        fdroid {
            dimension 'type'
            versionNameSuffix '-fd'
        }

        foss {
            dimension 'version'
        }
        pro {
            dimension 'version'
            applicationIdSuffix '.pro'
            versionNameSuffix '-pro'
        }
    }

    variantFilter { variant ->
        List names = variant.flavors*.name
        if (!isPro) {
            if (!names.contains('fdroid') || !names.contains('foss')) {
                variant.setIgnore(true)
            }
        } else if (names.contains('ps') && names.contains('foss')) {
            variant.setIgnore(true)
        } else if (names.contains('fdroid') && names.contains('pro')) {
            variant.setIgnore(true)
        }
    }

    buildTypes {
        debug {
            applicationIdSuffix ".debug"
            versionNameSuffix "-debug"
        }
    }

    applicationVariants.configureEach { variant ->
        def mf = variant.mergedFlavor
        if (variant.flavorName == 'psPro' && variant.buildType.name == 'release') {
            // No .pro suffix for Play Store Pro release
            mf.setApplicationId(variant.applicationId.replace('.pro', ''))
        }

        String lfp = variant.applicationId + '.LogFileProvider'
        mf.addManifestPlaceholders(LOG_FILE_PROVIDER: lfp)
        variant.buildConfigField 'String', 'LOG_FILE_PROVIDER', '"' + lfp + '"'
    }

    buildFeatures {
        aidl true
    }
}

dependencies {
    implementation libs.androidx.appcompat
    implementation libs.androidx.recyclerview
    implementation libs.androidx.browser
    implementation libs.androidx.security.crypto
    implementation libs.androidx.coordinator.layout

    // For BottomSheetDialogFragment
    implementation libs.material

    // To handle hyperlink onClick in TextView
    implementation libs.better.link.movement.method

    debugImplementation libs.leakcanary.android
}

lsparanoid {
    variantFilter {
        !it.name.contains('Foss') && it.buildType != 'debug'
    }
}
